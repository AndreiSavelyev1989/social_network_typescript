{"version":3,"sources":["components/common/universal-input/UniversalInput.tsx","components/common/universal-input/UniversalInput.module.scss","components/common/delete-button/DeleteButton.tsx","components/common/delete-button/DeleteButton.module.scss","components/common/modal/modal-confirm/ConfirmModal.tsx","components/common/modal/modal-confirm/ConfirmModal.module.scss","components/hoc/withAuthRedirect.tsx","components/dialogs/Dialogs.module.scss","components/dialogs/dialog/Dialog.module.scss","components/dialogs/message/Message.module.scss","components/dialogs/dialogs-message-form/DialogsMessageForm.module.scss","components/dialogs/dialog/Dialog.tsx","components/dialogs/message/Message.tsx","components/dialogs/dialogs-message-form/DialogsMessageForm.tsx","components/dialogs/Dialogs.tsx","components/dialogs/DialogsContainer.tsx"],"names":["UniversalInput","id","type","placeholder","formikFieldProps","className","value","onChange","autoFocus","onBlur","onKeyUp","styles","loginInput","formInput","statusInput","required","module","exports","DeleteButton","onDeleteHandler","disabled","deleteBlock","deleteButton","onClick","icon","ConfirmModal","confirm","title","confirmCallback","cancelCallback","modalContainer","noModal","text","confirmBlock","callback","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","Dialog","dialogItemContainer","avatarBlock","src","userAvatar","alt","userNameBlock","activeClassName","active","dialogUserName","name","Message","message","messageId","deleteMessage","useState","setConfirm","messageContainer","avatar","messageItem","DialogsMessageForm","React","memo","addNewMessage","formik","useFormik","initialValues","newMessage","validate","values","errors","length","onSubmit","resetForm","handleSubmit","formBlock","formContainer","inputBlock","getFieldProps","touched","error","buttonBlock","UniversalButton","Dialogs","dialogs","messages","dialogsElements","map","d","messagesElements","m","dialogsContainer","compose","dialogsPage"],"mappings":"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","file":"static/js/6.3372910a.chunk.js","sourcesContent":["import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport styles from \"./UniversalInput.module.scss\";\r\n\r\ntype PropsType = {\r\n    id?: string\r\n    type: string\r\n    placeholder?: string\r\n    formikFieldProps?: any\r\n    className?: \"login\" | \"status\"\r\n    value?: undefined | string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n    autoFocus?: boolean\r\n    onBlur?: () => void\r\n    onKeyUp?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const UniversalInput: React.FC<PropsType> = ({\r\n                                                        id,\r\n                                                        type,\r\n                                                        placeholder,\r\n                                                        formikFieldProps,\r\n                                                        className,\r\n                                                        value,\r\n                                                        onChange,\r\n                                                        autoFocus,\r\n                                                        onBlur,\r\n                                                        onKeyUp\r\n                                                    }) => {\r\n    return (\r\n            <input\r\n                id={id}\r\n                className={className === \"login\" ? styles.loginInput : styles.formInput\r\n                    ? className === \"status\" ? styles.statusInput : styles.formInput : styles.formInput}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                required\r\n                autoFocus={autoFocus}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                onKeyUp={onKeyUp}\r\n                value={value}\r\n                {...formikFieldProps}\r\n            />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"UniversalInput_formInput__3yZbU\",\"loginInput\":\"UniversalInput_loginInput__20Stk\",\"statusInput\":\"UniversalInput_statusInput__3jznv\"};","import styles from \"./DeleteButton.module.scss\";\r\nimport {MdDelete} from \"react-icons/all\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    onDeleteHandler: () => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport const DeleteButton: React.FC<PropsType> = ({onDeleteHandler, disabled}) => {\r\n    return (\r\n        <div className={styles.deleteBlock} >\r\n            <div className={styles.deleteButton}>\r\n                <button disabled={disabled} onClick={onDeleteHandler}>\r\n                    <MdDelete className={styles.icon}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBlock\":\"DeleteButton_deleteBlock__20pgZ\",\"deleteButton\":\"DeleteButton_deleteButton__2K7YW\",\"icon\":\"DeleteButton_icon__2d71H\"};","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {StoreType} from \"../../../../redux-state/redux-store\";\r\nimport {AuthUserType, setError} from \"../../../../redux-state/auth-reducer\";\r\nimport styles from \"./ConfirmModal.module.scss\";\r\nimport {UniversalButton} from \"../../universal-button/UniversalButton\";\r\n\r\ntype PropsType = {\r\n    confirm: boolean\r\n    title: string\r\n    confirmCallback: () => void\r\n    cancelCallback: () => void\r\n}\r\nexport const ConfirmModal: React.FC<PropsType> = ({\r\n                                                      confirm,\r\n                                                      title,\r\n                                                      confirmCallback,\r\n                                                      cancelCallback\r\n                                                  }) => {\r\n\r\n    return (\r\n        <div className={confirm ? styles.modalContainer : styles.noModal}>\r\n            <div className={styles.text}>{title}</div>\r\n            <div className={styles.confirmBlock}>\r\n                <UniversalButton callback={confirmCallback} title={\"Ok\"}/>\r\n                <UniversalButton callback={cancelCallback} title={\"Cancel\"} className={true}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ConfirmModal_modalContainer__3h725\",\"text\":\"ConfirmModal_text__2KoFI\",\"confirmBlock\":\"ConfirmModal_confirmBlock__2ahR6\",\"noModal\":\"ConfirmModal_noModal__2qRHI\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StoreType} from \"../../redux-state/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: StoreType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    const withRedirect = (props: any) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps)(withRedirect)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__2EjiT\",\"dialogs\":\"Dialogs_dialogs__3Qhgh\",\"messages\":\"Dialogs_messages__3DnUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItemContainer\":\"Dialog_dialogItemContainer__5SiuG\",\"avatarBlock\":\"Dialog_avatarBlock__DKVa7\",\"userNameBlock\":\"Dialog_userNameBlock__LZm_C\",\"active\":\"Dialog_active__1hS_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__35tSr\",\"avatar\":\"Message_avatar__1XgYG\",\"messageItem\":\"Message_messageItem__1LjT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBlock\":\"DialogsMessageForm_formBlock__18zhU\",\"formContainer\":\"DialogsMessageForm_formContainer__1PN-O\",\"inputBlock\":\"DialogsMessageForm_inputBlock__RgJ_2\",\"error\":\"DialogsMessageForm_error__1DXkw\",\"buttonBlock\":\"DialogsMessageForm_buttonBlock__3oEM9\"};","import React from \"react\";\r\nimport styles from \"./Dialog.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userAvatar from \"../../../images/userAvatar.jpg\"\r\n\r\ntype DialogPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport function Dialog(props: DialogPropsType) {\r\n    return (\r\n        <div className={styles.dialogItemContainer}>\r\n            <div className={styles.avatarBlock}>\r\n                <img src={userAvatar} alt=\"user-avatar\"/>\r\n            </div>\r\n            <div className={styles.userNameBlock}>\r\n                <NavLink to={`/dialogs/${props.id}`}\r\n                         activeClassName={styles.active}\r\n                         className={styles.dialogUserName}\r\n                >{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Message.module.scss\"\r\nimport userAvatar from \"./../../../images/userAvatar.jpg\"\r\nimport {DeleteButton} from \"../../common/delete-button/DeleteButton\";\r\nimport {ConfirmModal} from \"../../common/modal/modal-confirm/ConfirmModal\";\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    messageId: string\r\n    deleteMessage: (messageId: string) => void\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = ({message, messageId, deleteMessage}) => {\r\n\r\n    const [confirm, setConfirm] = useState(false)\r\n\r\n    const onMessageDeleteHandler = () => {\r\n        deleteMessage(messageId)\r\n    }\r\n\r\n    const onConfirmDeleteHandler = () => {\r\n        setConfirm(true)\r\n    }\r\n    const onCancelDeleteHandler = () => {\r\n        setConfirm(false)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.messageContainer}>\r\n            <div className={styles.avatar}>\r\n                <img src={userAvatar} alt=\"userAvatar\"/>\r\n            </div>\r\n            <div className={styles.messageItem}>\r\n                <div>\r\n                    {message}\r\n                </div>\r\n                <DeleteButton onDeleteHandler={onConfirmDeleteHandler}/>\r\n            </div>\r\n            <ConfirmModal confirm={confirm}\r\n                          title={\"Delete ?\"}\r\n                          confirmCallback={onMessageDeleteHandler}\r\n                          cancelCallback={onCancelDeleteHandler}/>\r\n        </div>\r\n    )\r\n};\r\n","import {useFormik} from \"formik\";\r\nimport styles from \"./DialogsMessageForm.module.scss\";\r\nimport React from \"react\";\r\nimport {UniversalInput} from \"../../common/universal-input/UniversalInput\";\r\nimport {UniversalButton} from \"../../common/universal-button/UniversalButton\";\r\n\r\ntype FormikErrorType = {\r\n    newMessage?: string\r\n}\r\n\r\ntype PropsType = {\r\n    addNewMessage: (newMessage: string) => void\r\n}\r\nexport const DialogsMessageForm: React.FC<PropsType> = React.memo(({addNewMessage}) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newMessage: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (values.newMessage.length > 100) {\r\n                errors.newMessage = 'Max length is 100 symbols';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            addNewMessage(values.newMessage)\r\n            formik.resetForm({\r\n                values: {newMessage: '',}\r\n            })\r\n        }\r\n    })\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={styles.formBlock}>\r\n            <div className={styles.formContainer}>\r\n                <div className={styles.inputBlock}>\r\n                    <UniversalInput type={\"text\"}\r\n                                    placeholder={\"New message\"}\r\n                                    formikFieldProps={formik.getFieldProps(\"newMessage\")}/>\r\n                    {formik.touched.newMessage && formik.errors.newMessage ?\r\n                        <div className={styles.error}>{formik.errors.newMessage}</div> : null}\r\n                </div>\r\n\r\n                <div className={styles.buttonBlock}>\r\n                    <UniversalButton\r\n                        title={\"send\"}\r\n                        type={\"submit\"}>Send message</UniversalButton>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n})","import React from \"react\";\r\nimport styles from \"./Dialogs.module.scss\"\r\nimport {Dialog} from \"./dialog/Dialog\";\r\nimport {Message} from \"./message/Message\";\r\nimport {DialogsType, MessagesType} from \"../../redux-state/dialogs-reducer\";\r\nimport {DialogsMessageForm} from \"./dialogs-message-form/DialogsMessageForm\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    newMessageText: string\r\n    addNewMessage: (newMessageText: string) => void\r\n    deleteMessage: (messageId: string) => void\r\n    updateNewMessageText: (newText: string) => void\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = React.memo(({dialogs, messages, deleteMessage, addNewMessage}) => {\r\n\r\n    const dialogsElements = dialogs.map(d => <Dialog key={d.id} id={d.id} name={d.name}/>)\r\n    const messagesElements = messages.map(m => <Message\r\n        key={m.id}\r\n        deleteMessage={deleteMessage}\r\n        message={m.message}\r\n        messageId={m.id}/>)\r\n\r\n    return (\r\n        <div className={styles.dialogsContainer}>\r\n            <div className={styles.dialogs}>{dialogsElements}</div>\r\n            <div className={styles.messages}>\r\n                {messagesElements}\r\n                <DialogsMessageForm addNewMessage={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});","import {addNewMessage, deleteMessage} from \"../../redux-state/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StoreType} from \"../../redux-state/redux-store\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToProps = (state: StoreType) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages:state.dialogsPage.messages\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, { addNewMessage, deleteMessage }),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}