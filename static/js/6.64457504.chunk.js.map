{"version":3,"sources":["components/common/universal-input/UniversalInput.tsx","components/common/universal-input/UniversalInput.module.scss","components/common/delete-button/DeleteButton.tsx","components/common/delete-button/DeleteButton.module.scss","components/hoc/withAuthRedirect.tsx","images/userAvatar.png","components/dialogs/Dialogs.module.scss","components/dialogs/dialog/Dialog.module.scss","components/dialogs/message/Message.module.scss","components/dialogs/dialogs-message-form/DialogsMessageForm.module.scss","components/dialogs/dialog/Dialog.tsx","components/dialogs/message/Message.tsx","components/dialogs/dialogs-message-form/DialogsMessageForm.tsx","components/dialogs/Dialogs.tsx","components/dialogs/DialogsContainer.tsx"],"names":["UniversalInput","id","type","placeholder","formikFieldProps","className","styles","loginInput","formInput","required","module","exports","DeleteButton","onDeleteHandler","deleteBlock","onClick","deleteButton","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","Dialog","dialogItemContainer","avatarBlock","src","userAvatar","alt","userNameBlock","activeClassName","active","dialogUserName","name","Message","message","messageId","deleteMessage","messageContainer","avatar","messageItem","DialogsMessageForm","React","memo","addNewMessage","formik","useFormik","initialValues","newMessage","validate","values","errors","length","onSubmit","resetForm","handleSubmit","formBlock","formContainer","inputBlock","getFieldProps","touched","style","registrationError","buttonBlock","UniversalButton","title","Dialogs","dialogs","messages","dialogsElements","map","d","key","messagesElements","m","dialogsContainer","compose","dialogsPage"],"mappings":"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","file":"static/js/6.64457504.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./UniversalInput.module.scss\";\r\n\r\ntype PropsType = {\r\n    id?: string\r\n    type: string\r\n    placeholder: string\r\n    formikFieldProps: any\r\n    className?: \"login\"\r\n}\r\n\r\nexport const UniversalInput: React.FC<PropsType> = ({id, type, placeholder, formikFieldProps, className}) => {\r\n    return (\r\n            <input\r\n                id={id}\r\n                className={className === \"login\" ? styles.loginInput : styles.formInput}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                required\r\n                {...formikFieldProps}\r\n            />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"UniversalInput_formInput__E3x54\",\"loginInput\":\"UniversalInput_loginInput__2pjhI\"};","import styles from \"./DeleteButton.module.scss\";\r\nimport {MdDelete} from \"react-icons/all\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    onDeleteHandler: () => void\r\n}\r\n\r\nexport const DeleteButton: React.FC<PropsType> = ({onDeleteHandler}) => {\r\n    return (\r\n        <div className={styles.deleteBlock} onClick={onDeleteHandler}>\r\n            <div className={styles.deleteButton}>\r\n                <MdDelete/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBlock\":\"DeleteButton_deleteBlock__1DwRq\",\"deleteButton\":\"DeleteButton_deleteButton__2-oVS\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StoreType} from \"../../redux-state/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: StoreType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    const withRedirect = (props: any) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps)(withRedirect)\r\n}","module.exports = __webpack_public_path__ + \"static/media/userAvatar.707da3eb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContainer\":\"Dialogs_dialogsContainer__2ScwE\",\"dialogs\":\"Dialogs_dialogs__1jA_L\",\"messages\":\"Dialogs_messages__30CF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItemContainer\":\"Dialog_dialogItemContainer__2O2Oc\",\"avatarBlock\":\"Dialog_avatarBlock__3DYGb\",\"userNameBlock\":\"Dialog_userNameBlock__21A0J\",\"active\":\"Dialog_active__1bc4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer___x9uY\",\"avatar\":\"Message_avatar__13I4C\",\"messageItem\":\"Message_messageItem__2HFyK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBlock\":\"DialogsMessageForm_formBlock__4ssQx\",\"formContainer\":\"DialogsMessageForm_formContainer__oi5jg\",\"inputBlock\":\"DialogsMessageForm_inputBlock__1TyCm\",\"buttonBlock\":\"DialogsMessageForm_buttonBlock__Dy0IW\"};","import React from \"react\";\r\nimport styles from \"./Dialog.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userAvatar from \"../../../images/userAvatar.png\"\r\n\r\ntype DialogPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport function Dialog(props: DialogPropsType) {\r\n    return (\r\n        <div className={styles.dialogItemContainer}>\r\n            <div className={styles.avatarBlock}>\r\n                <img src={userAvatar} alt=\"user-avatar\"/>\r\n            </div>\r\n            <div className={styles.userNameBlock}>\r\n                <NavLink to={`/dialogs/${props.id}`}\r\n                         activeClassName={styles.active}\r\n                         className={styles.dialogUserName}\r\n                >{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Message.module.scss\"\r\nimport userAvatar from \"./../../../images/userAvatar.png\"\r\nimport {DeleteButton} from \"../../common/delete-button/DeleteButton\";\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    messageId: string\r\n    deleteMessage: (messageId: string) => void\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = ({message, messageId, deleteMessage}) => {\r\n\r\n    const onMessageDeleteHandler = () => {\r\n        deleteMessage(messageId)\r\n    }\r\n    return (\r\n        <div className={styles.messageContainer}>\r\n            <div className={styles.avatar}>\r\n                <img src={userAvatar} alt=\"userAvatar\"/>\r\n            </div>\r\n            <div className={styles.messageItem}>\r\n                <div>\r\n                    {message}\r\n                </div>\r\n                <DeleteButton onDeleteHandler={onMessageDeleteHandler}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import {useFormik} from \"formik\";\r\nimport style from \"../../login/Login.module.scss\";\r\nimport styles from \"./DialogsMessageForm.module.scss\";\r\nimport React from \"react\";\r\nimport {UniversalInput} from \"../../common/universal-input/UniversalInput\";\r\nimport {UniversalButton} from \"../../common/universal-button/UniversalButton\";\r\n\r\ntype FormikErrorType = {\r\n    newMessage?: string\r\n}\r\n\r\ntype PropsType = {\r\n    addNewMessage: (newMessage: string) => void\r\n}\r\nexport const DialogsMessageForm: React.FC<PropsType> = React.memo(({addNewMessage}) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newMessage: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (values.newMessage.length > 100) {\r\n                errors.newMessage = 'Max length is 100 symbols';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            addNewMessage(values.newMessage)\r\n            formik.resetForm({\r\n                values: {newMessage: '',}\r\n            })\r\n        }\r\n    })\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={styles.formBlock}>\r\n            <div className={styles.formContainer}>\r\n                <div className={styles.inputBlock}>\r\n                    <UniversalInput type={\"text\"}\r\n                                    placeholder={\"New message\"}\r\n                                    formikFieldProps={formik.getFieldProps(\"newMessage\")}/>\r\n                    {formik.touched.newMessage && formik.errors.newMessage ?\r\n                        <div className={style.registrationError}>{formik.errors.newMessage}</div> : null}\r\n                </div>\r\n\r\n                <div className={styles.buttonBlock}>\r\n                    <UniversalButton\r\n                        title={\"send\"}\r\n                        type={\"submit\"}>Send message</UniversalButton>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n})","import React from \"react\";\r\nimport styles from \"./Dialogs.module.scss\"\r\nimport {Dialog} from \"./dialog/Dialog\";\r\nimport {Message} from \"./message/Message\";\r\nimport {DialogsType, MessagesType} from \"../../redux-state/dialogs-reducer\";\r\nimport {DialogsMessageForm} from \"./dialogs-message-form/DialogsMessageForm\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n    newMessageText: string\r\n    addNewMessage: (newMessageText: string) => void\r\n    deleteMessage: (messageId: string) => void\r\n    updateNewMessageText: (newText: string) => void\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = React.memo(({dialogs, messages, deleteMessage, addNewMessage}) => {\r\n\r\n    const dialogsElements = dialogs.map(d => <Dialog key={d.id} id={d.id} name={d.name}/>)\r\n    const messagesElements = messages.map(m => <Message\r\n        key={m.id}\r\n        deleteMessage={deleteMessage}\r\n        message={m.message}\r\n        messageId={m.id}/>)\r\n\r\n    return (\r\n        <div className={styles.dialogsContainer}>\r\n            <div className={styles.dialogs}>{dialogsElements}</div>\r\n            <div className={styles.messages}>\r\n                {messagesElements}\r\n                <DialogsMessageForm addNewMessage={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});","import {addNewMessage, deleteMessage} from \"../../redux-state/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {StoreType} from \"../../redux-state/redux-store\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToProps = (state: StoreType) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages:state.dialogsPage.messages\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, { addNewMessage, deleteMessage }),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}