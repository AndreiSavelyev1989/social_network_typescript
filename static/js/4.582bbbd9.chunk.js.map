{"version":3,"sources":["components/common/universal-input/UniversalInput.tsx","components/common/universal-input/UniversalInput.module.scss","components/common/delete-button/DeleteButton.tsx","components/common/delete-button/DeleteButton.module.scss","components/login/login-form/LoginForm.module.scss","components/hoc/withAuthRedirect.tsx","components/profile/Profile.module.scss","components/profile/profile-info/ProfileInfo.module.scss","components/profile/profile-info/profile-status/ProfileStatusWithHooks.module.scss","images/profileBackground.jpg","components/profile/my-posts/MyPosts.module.scss","components/profile/my-posts/post/Post.module.scss","components/profile/profile-post-form/ProfilePostForm.module.scss","components/profile/profile-navigation/ProfileNavigation.module.scss","components/profile/profile-info/about-me/AboutMe.module.scss","components/profile/profile-info/my-friends/MyFriends.module.scss","components/profile/profile-info/profile-status/ProfileStatusWithHooks.tsx","components/profile/profile-info/upload-button/UploadButton.tsx","components/profile/profile-info/ProfileInfo.tsx","components/profile/my-posts/post/Post.tsx","components/profile/profile-post-form/ProfilePostForm.tsx","components/profile/my-posts/MyPosts.tsx","components/profile/my-posts/MyPostsContainer.tsx","components/profile/profile-navigation/ProfileNavigation.tsx","components/profile/profile-info/about-me/about-item/AboutItem.tsx","components/profile/profile-info/about-me/AboutMe.tsx","components/profile/profile-info/my-friends/MyFriends.tsx","components/profile/Profile.tsx","components/profile/ProfileContainer.tsx"],"names":["UniversalInput","id","type","placeholder","formikFieldProps","className","value","onChange","autoFocus","onBlur","onKeyUp","styles","loginInput","formInput","statusInput","required","module","exports","DeleteButton","onDeleteHandler","deleteBlock","onClick","deleteButton","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","ProfileStatusWithHooks","React","memo","status","changeUserStatus","error","isOwner","useState","editMode","setEditMode","localStatus","setLocalStatus","useEffect","statusContainer","e","currentTarget","key","statusBlock","Preloader","statusDescription","noDesc","style","useStyles","makeStyles","theme","createStyles","root","margin","spacing","input","display","UploadButton","changeUserPhoto","classes","accept","target","files","htmlFor","IconButton","color","aria-label","component","size","fontSize","ProfileInfo","profile","contentContainer","backgroundImage","profileBackgroundImg","contentBlock","imageContainer","src","photos","large","userAvatar","alt","fileContainer","userNameTitle","fullName","Post","likesCount","setLikesCount","postMessage","deletePost","dislikesCount","setDislikesCount","postBackground","today","Date","date","getDate","getMonth","getFullYear","postContainer","titleBlock","avatarBlock","avatar","userNameDateBlock","userName","imageBlock","likesBlock","likeDislikeContainer","like","dislike","ProfilePostForm","addPost","formik","useFormik","initialValues","newPost","validate","values","errors","length","onSubmit","resetForm","postsContainer","postsTitle","formBlock","handleSubmit","formBlockEnterText","userPhoto","getFieldProps","formBlockSubmit","touched","registrationError","UniversalButton","title","MyPosts","posts","postElements","reverse","map","p","v1","MyPostsContainer","profilePage","ProfileNavigation","profNavContainer","profileNavData","item","index","path","activeClassName","profNavActive","profNavItem","profNavTitle","AboutItem","data","classname","About","aboutContainer","aboutBlock","basicInfoBlock","nameBlock","aboutMe","aboutMeBlock","lookingForAJob","lookingJobBlock","lookingForAJobDescription","jobDescBlock","linksInfoBlock","contacts","facebook","facebookBlock","github","githubBlock","instagram","instagramBlock","mainLink","mainLinkBlock","twitter","twitterBlock","vk","vkBlock","website","websiteBlock","youtube","youtubeBlock","MyFriends","aboutMyFriendContainer","Profile","profileWrapper","profileNavPanel","PATH","PROFILE","ABOUT","render","FRIENDS","POSTS","ProfileContainer","userId","Number","this","match","params","history","push","requestUserProfile","requestUserStatus","refreshProfile","prevProps","prevState","PureComponent","compose","withRouter"],"mappings":"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","file":"static/js/4.582bbbd9.chunk.js","sourcesContent":["import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport styles from \"./UniversalInput.module.scss\";\r\n\r\ntype PropsType = {\r\n    id?: string\r\n    type: string\r\n    placeholder?: string\r\n    formikFieldProps?: any\r\n    className?: \"login\" | \"status\"\r\n    value?: undefined | string\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n    autoFocus?: boolean\r\n    onBlur?: () => void\r\n    onKeyUp?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const UniversalInput: React.FC<PropsType> = ({\r\n                                                        id,\r\n                                                        type,\r\n                                                        placeholder,\r\n                                                        formikFieldProps,\r\n                                                        className,\r\n                                                        value,\r\n                                                        onChange,\r\n                                                        autoFocus,\r\n                                                        onBlur,\r\n                                                        onKeyUp\r\n                                                    }) => {\r\n    return (\r\n            <input\r\n                id={id}\r\n                className={className === \"login\" ? styles.loginInput : styles.formInput\r\n                    ? className === \"status\" ? styles.statusInput : styles.formInput : styles.formInput}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                required\r\n                autoFocus={autoFocus}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n                onKeyUp={onKeyUp}\r\n                value={value}\r\n                {...formikFieldProps}\r\n            />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"UniversalInput_formInput__E3x54\",\"loginInput\":\"UniversalInput_loginInput__2pjhI\",\"statusInput\":\"UniversalInput_statusInput__zeyQo\"};","import styles from \"./DeleteButton.module.scss\";\r\nimport {MdDelete} from \"react-icons/all\";\r\nimport React from \"react\";\r\n\r\ntype PropsType = {\r\n    onDeleteHandler: () => void\r\n}\r\n\r\nexport const DeleteButton: React.FC<PropsType> = ({onDeleteHandler}) => {\r\n    return (\r\n        <div className={styles.deleteBlock} onClick={onDeleteHandler}>\r\n            <div className={styles.deleteButton}>\r\n                <MdDelete/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBlock\":\"DeleteButton_deleteBlock__1DwRq\",\"deleteButton\":\"DeleteButton_deleteButton__2-oVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBlock\":\"LoginForm_formBlock__2fI46\",\"descriptionBlock\":\"LoginForm_descriptionBlock__3209N\",\"emailTitle\":\"LoginForm_emailTitle__378ZM\",\"passwordBlock\":\"LoginForm_passwordBlock__1AFJK\",\"passwordTitle\":\"LoginForm_passwordTitle__1wgXB\",\"forgotPasswordTitle\":\"LoginForm_forgotPasswordTitle__2Wmuw\",\"confirmBlock\":\"LoginForm_confirmBlock__i6leB\",\"button\":\"LoginForm_button__3JYjJ\",\"registrationError\":\"LoginForm_registrationError__Q15Ok\",\"error\":\"LoginForm_error__3IBFZ\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {StoreType} from \"../../redux-state/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state: StoreType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    const withRedirect = (props: any) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\r\n        return <Component {...props}/>\r\n    }\r\n    return connect(mapStateToProps)(withRedirect)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__2R5zu\",\"profileNavPanel\":\"Profile_profileNavPanel__34AMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"ProfileInfo_contentContainer__349lI\",\"contentBlock\":\"ProfileInfo_contentBlock__3aRvm\",\"imageContainer\":\"ProfileInfo_imageContainer__1OFjn\",\"fileContainer\":\"ProfileInfo_fileContainer__3CaP1\",\"userNameTitle\":\"ProfileInfo_userNameTitle__3g3xv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusContainer\":\"ProfileStatusWithHooks_statusContainer__2NZf2\",\"statusBlock\":\"ProfileStatusWithHooks_statusBlock__S9RmM\",\"statusDescription\":\"ProfileStatusWithHooks_statusDescription__OkTDh\",\"statusDesc\":\"ProfileStatusWithHooks_statusDesc__1l-Fn\",\"noDesc\":\"ProfileStatusWithHooks_noDesc__qmUfY\",\"status\":\"ProfileStatusWithHooks_status__2BA3b\"};","module.exports = __webpack_public_path__ + \"static/media/profileBackground.d2a502d9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"MyPosts_postsContainer__3n9Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"Post_postContainer__ODxNr\",\"titleBlock\":\"Post_titleBlock__1d_4X\",\"avatarBlock\":\"Post_avatarBlock__VJcDS\",\"avatar\":\"Post_avatar__3FGzu\",\"userNameDateBlock\":\"Post_userNameDateBlock__3o-qi\",\"userName\":\"Post_userName__UIaAh\",\"postMessage\":\"Post_postMessage__2akLT\",\"imageBlock\":\"Post_imageBlock__2z54Z\",\"likesBlock\":\"Post_likesBlock__cfPzV\",\"likeDislikeContainer\":\"Post_likeDislikeContainer__1HugZ\",\"like\":\"Post_like__2SNhK\",\"dislike\":\"Post_dislike__3_hh6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"ProfilePostForm_postsContainer__3XoR6\",\"postsTitle\":\"ProfilePostForm_postsTitle__2y79s\",\"formBlock\":\"ProfilePostForm_formBlock__2dAHD\",\"formBlockEnterText\":\"ProfilePostForm_formBlockEnterText__npLvB\",\"userPhoto\":\"ProfilePostForm_userPhoto__3qvPV\",\"formBlockSubmit\":\"ProfilePostForm_formBlockSubmit__28tNK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profNavContainer\":\"ProfileNavigation_profNavContainer__3ce_F\",\"profNavItem\":\"ProfileNavigation_profNavItem__21xO0\",\"profNavTitle\":\"ProfileNavigation_profNavTitle__1nulm\",\"profNavActive\":\"ProfileNavigation_profNavActive__3Mbo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutContainer\":\"AboutMe_aboutContainer__2txQF\",\"aboutBlock\":\"AboutMe_aboutBlock__3sB6F\",\"basicInfoBlock\":\"AboutMe_basicInfoBlock__3r4wN\",\"nameBlock\":\"AboutMe_nameBlock__MOLbO\",\"aboutMeBlock\":\"AboutMe_aboutMeBlock__2mGg2\",\"lookingJobBlock\":\"AboutMe_lookingJobBlock__3O3Rm\",\"jobDescBlock\":\"AboutMe_jobDescBlock__2fWjE\",\"linksInfoBlock\":\"AboutMe_linksInfoBlock__HUjD3\",\"facebookBlock\":\"AboutMe_facebookBlock__2oX9y\",\"githubBlock\":\"AboutMe_githubBlock__1huEU\",\"instagramBlock\":\"AboutMe_instagramBlock__1D0qW\",\"mainLinkBlock\":\"AboutMe_mainLinkBlock__2mBn8\",\"twitterBlock\":\"AboutMe_twitterBlock__2vv1p\",\"vkBlock\":\"AboutMe_vkBlock__3vSp2\",\"websiteBlock\":\"AboutMe_websiteBlock__3Kq-L\",\"youtubeBlock\":\"AboutMe_youtubeBlock__2oaO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMyFriendContainer\":\"MyFriends_aboutMyFriendContainer__15jCp\"};","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport {Preloader} from \"../../../common/preloader/Preloader\";\r\nimport style from \"../../../login/Login.module.scss\";\r\nimport styles from \"./ProfileStatusWithHooks.module.scss\";\r\nimport {UniversalInput} from \"../../../common/universal-input/UniversalInput\";\r\n\r\ntype PropsType = {\r\n    status: string\r\n    error: string\r\n    changeUserStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<PropsType> = React.memo(({status, changeUserStatus, error, isOwner}) => {\r\n    const [editMode, setEditMode] = React.useState(false)\r\n    const [localStatus, setLocalStatus] = React.useState(status)\r\n\r\n    React.useEffect(() => {\r\n        setLocalStatus(status)\r\n    }, [status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        changeUserStatus(localStatus)\r\n    }\r\n\r\n    const onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyDeactivateEditMode = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            setEditMode(false)\r\n            changeUserStatus(localStatus)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className={styles.statusContainer}>\r\n                {editMode && isOwner\r\n                    ? <UniversalInput\r\n                        type=\"text\"\r\n                        className={\"status\"}\r\n                        autoFocus={true}\r\n                        onChange={onChangeStatusHandler}\r\n                        onBlur={deactivateEditMode}\r\n                        onKeyUp={onKeyDeactivateEditMode}\r\n                        value={localStatus}/>\r\n                    :\r\n                    <div className={styles.statusBlock}>\r\n                        <span className={styles.status}\r\n                              onClick={activateEditMode}>{status === localStatus ? status || \"Empty status\" :\r\n                            <Preloader/>}</span>\r\n                        <span className={isOwner ? styles.statusDescription : styles.noDesc}>\r\n                            Click to change status !!!\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n            {error && <div className={style.error}>{error}</div>}\r\n        </>\r\n    )\r\n})\r\n","import React, {ChangeEvent} from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport {GoCloudUpload} from \"react-icons/all\";\r\n\r\ntype PropsType = {\r\n    changeUserPhoto: (photos: File) => void\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }),\r\n);\r\n\r\nexport const UploadButton: React.FC<PropsType> = ({changeUserPhoto}) => {\r\n    const classes = useStyles();\r\n\r\n    const onChangeUserPhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            changeUserPhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={onChangeUserPhoto}/>\r\n            <label htmlFor=\"icon-button-file\">\r\n                <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" size=\"medium\">\r\n                    <GoCloudUpload style={{fontSize: \"2.5rem\"}}/>\r\n                </IconButton>\r\n            </label>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport {ProfileType} from \"../../../redux-state/profile-reducer\";\r\nimport {ProfileStatusWithHooks} from \"./profile-status/ProfileStatusWithHooks\";\r\nimport {UploadButton} from \"./upload-button/UploadButton\";\r\nimport profileBackgroundImg from \"./../../../images/profileBackground.jpg\"\r\nimport userAvatar from \"../../../images/userAvatar.jpg\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    error: string\r\n    changeUserStatus: (status: string) => void\r\n    changeUserPhoto: (photos: File) => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = React.memo(({changeUserStatus, status, error, profile, changeUserPhoto, isOwner}) => {\r\n\r\n    return (\r\n        <div className={styles.contentContainer} style={{backgroundImage: `url(${profileBackgroundImg})`}}>\r\n            <div className={styles.contentBlock}>\r\n                {profile\r\n                    ?\r\n                    <>\r\n                        <div className={styles.imageContainer}>\r\n                            <img src={profile.photos.large ? profile.photos.large : userAvatar} alt=\"user-avatar\"/>\r\n                            <label className={isOwner ? styles.fileContainer : \"\"} htmlFor=\"icon-button-file\">\r\n                                {isOwner && <UploadButton changeUserPhoto={changeUserPhoto}/>}\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className={styles.userNameTitle}>{profile.fullName}</div>\r\n                        <ProfileStatusWithHooks status={status}\r\n                                                isOwner={isOwner}\r\n                                                error={error}\r\n                                                changeUserStatus={changeUserStatus}/>\r\n                    </>\r\n                    : <Preloader/>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n});\r\n","import React from \"react\";\r\nimport styles from \"./Post.module.scss\"\r\nimport avatar from \"./../../../../images/userAvatar.png\"\r\nimport {ProfileType} from \"../../../../redux-state/profile-reducer\";\r\nimport {BiDislike, BiLike} from \"react-icons/all\";\r\nimport {DeleteButton} from \"../../../common/delete-button/DeleteButton\";\r\nimport {Preloader} from \"../../../common/preloader/Preloader\";\r\n\r\ntype PostPropsType = {\r\n    id: string\r\n    postMessage: string\r\n    likesCount: number\r\n    dislikesCount: number\r\n    setLikesCount: (id: string, like: number) => void\r\n    setDislikesCount: (id: string, dislike: number) => void\r\n    deletePost: (id: string) => void\r\n    profile: ProfileType | null\r\n    postBackground: string\r\n}\r\n\r\nexport const Post: React.FC<PostPropsType> = ({likesCount, setLikesCount, postMessage, id, deletePost, profile, dislikesCount, setDislikesCount, postBackground}) => {\r\n\r\n    const onLikeClick = () => {\r\n        let like = likesCount + 1\r\n        setLikesCount(id, like)\r\n    }\r\n    const onDislikeClick = () => {\r\n        let dislike = dislikesCount + 1\r\n        setDislikesCount(id, dislike)\r\n    }\r\n\r\n    const onPostDeleteHandler = () => {\r\n        deletePost(id)\r\n    }\r\n\r\n    const today = new Date()\r\n    const date = `${today.getDate()}-${(today.getMonth() + 1)}-${today.getFullYear()}`\r\n\r\n    return (\r\n        <div className={styles.postContainer}>\r\n            <div className={styles.titleBlock}>\r\n                <div className={styles.avatarBlock}>\r\n                    {profile\r\n                        ? <img\r\n                            className={styles.avatar}\r\n                            src={profile.photos.large}\r\n                            alt=\"user-avatar\"/>\r\n                        : <Preloader/>}\r\n                </div>\r\n\r\n                <div className={styles.userNameDateBlock}>\r\n                    <div className={styles.userName}>{profile?.fullName}</div>\r\n                    <div className={styles.date}>{date}</div>\r\n                </div>\r\n                <div className={styles.postMessage}>{postMessage}</div>\r\n                <DeleteButton onDeleteHandler={onPostDeleteHandler}/>\r\n            </div>\r\n\r\n            <div className={styles.imageBlock} style={{backgroundImage: `url(${postBackground})`}}>\r\n\r\n            </div>\r\n\r\n            <div className={styles.likesBlock}>\r\n\r\n                <div className={styles.likeDislikeContainer}>\r\n                    <div>\r\n                        <BiLike className={styles.like} onClick={onLikeClick}/>{likesCount}\r\n                    </div>\r\n                    <div>\r\n                        <BiDislike className={styles.dislike} onClick={onDislikeClick}/>{dislikesCount}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import style from \"./../../login/login-form/LoginForm.module.scss\";\r\nimport styles from \"./ProfilePostForm.module.scss\";\r\nimport React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {UniversalButton} from \"../../common/universal-button/UniversalButton\";\r\nimport {UniversalInput} from \"../../common/universal-input/UniversalInput\";\r\nimport {ProfileType} from \"../../../redux-state/profile-reducer\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\ntype FormikErrorType = {\r\n    newPost?: string\r\n}\r\n\r\ntype PropsType = {\r\n    addPost: (newPost: string) => void\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const ProfilePostForm: React.FC<PropsType> = ({addPost, profile}) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            newPost: '',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (values.newPost && values.newPost.length > 100) {\r\n                errors.newPost = 'Max length is 100 symbols';\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: values => {\r\n            addPost(values.newPost)\r\n            formik.resetForm({\r\n                values: {newPost: '',}\r\n            })\r\n        },\r\n    })\r\n    return (\r\n        <div className={styles.postsContainer}>\r\n            <div className={styles.postsTitle}>\r\n                Create Post\r\n            </div>\r\n            <form className={styles.formBlock} onSubmit={formik.handleSubmit}>\r\n                <div className={styles.formBlockEnterText}>\r\n                    {profile ? <div className={styles.userPhoto}>\r\n                        <img src={profile ? profile.photos.large : \"\"} alt=\"user-avatar\"/>\r\n                    </div> : <Preloader/>}\r\n                    <UniversalInput type={\"text\"}\r\n                                    placeholder={\"Write something here...\"}\r\n                                    formikFieldProps={formik.getFieldProps(\"newPost\")}/>\r\n                </div>\r\n\r\n                <div className={styles.formBlockSubmit}>\r\n                    {formik.touched.newPost && formik.errors.newPost ?\r\n                        <div className={style.registrationError}>{formik.errors.newPost}</div>\r\n                        : <div> </div>}\r\n                    <UniversalButton type={\"submit\"} title={\"post\"} />\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./MyPosts.module.scss\"\r\nimport {Post} from \"./post/Post\";\r\nimport {PostType, ProfileType} from \"../../../redux-state/profile-reducer\";\r\nimport {ProfilePostForm} from \"../profile-post-form/ProfilePostForm\";\r\nimport {v1} from \"uuid\";\r\n\r\ntype PropsType = {\r\n    posts: Array<PostType>\r\n    addPost: (newPostText: string) => void\r\n    setLikesCount: (id: string, like: number) => void\r\n    setDislikesCount: (id: string, dislike: number) => void\r\n    deletePost: (id: string) => void\r\n    profile: ProfileType | null\r\n}\r\n\r\nexport const MyPosts: React.FC<PropsType> = React.memo(({posts, profile, setLikesCount, addPost, deletePost, setDislikesCount}) => {\r\n\r\n    const postElements =\r\n        [...posts]\r\n            .reverse()\r\n            .map(p => <Post\r\n                id={p.id}\r\n                key={v1()}\r\n                postBackground={p.postBackground}\r\n                profile={profile}\r\n                deletePost={deletePost}\r\n                postMessage={p.postMessage}\r\n                likesCount={p.likesCount}\r\n                dislikesCount={p.dislikesCount}\r\n                setLikesCount={setLikesCount}\r\n                setDislikesCount={setDislikesCount}\r\n            />)\r\n\r\n    return (\r\n        <div className={styles.postsContainer}>\r\n            <ProfilePostForm addPost={addPost} profile={profile}/>\r\n            {postElements}\r\n        </div>\r\n    )\r\n})","import {addPost, deletePost, setDislikesCount, setLikesCount} from \"../../../redux-state/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {StoreType} from \"../../../redux-state/redux-store\";\r\nimport React from \"react\";\r\n\r\n\r\nconst mapStateToProps = (state: StoreType) => {\r\n    const {posts, profile} = state.profilePage;\r\n    return { posts, profile }\r\n}\r\n\r\nexport const MyPostsContainer = React.memo(connect(mapStateToProps, {\r\n    addPost, setLikesCount, deletePost, setDislikesCount\r\n})(MyPosts))","import React from \"react\";\r\nimport {profileNavData} from \"../../navbar/SidebarData\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styles from \"./ProfileNavigation.module.scss\"\r\n\r\nexport const ProfileNavigation = () => {\r\n    return (\r\n        <div className={styles.profNavContainer}>\r\n            {profileNavData.map((item, index) => {\r\n                return (\r\n                    <NavLink to={item.path}\r\n                             key={index}\r\n                             activeClassName={styles.profNavActive}\r\n                             className={styles.profNavItem}>\r\n                        <span className={styles.profNavTitle}>{item.title}</span>\r\n                    </NavLink>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype PropsType = {\r\n    title: string\r\n    data: any\r\n    classname: any\r\n}\r\n\r\nexport const AboutItem:React.FC<PropsType> = ({title, data, classname}) => {\r\n    return (\r\n        <div className={classname}>\r\n            <div>{title}</div>\r\n            <div>{data}</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./AboutMe.module.scss\";\r\nimport {ProfileType} from \"../../../../redux-state/profile-reducer\";\r\nimport {Preloader} from \"../../../common/preloader/Preloader\";\r\nimport {AboutItem} from \"./about-item/AboutItem\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n}\r\nexport const About: React.FC<PropsType> = React.memo(({profile}) => {\r\n\r\n    return (\r\n        <div className={styles.aboutContainer}>\r\n            {profile ?\r\n                <div className={styles.aboutBlock}>\r\n                    <h2>Basic Information</h2>\r\n                    <div className={styles.basicInfoBlock}>\r\n                        <AboutItem title={\"Name\"} data={profile.fullName} classname={styles.nameBlock}/>\r\n                        <AboutItem title={\"About me\"} data={profile.aboutMe} classname={styles.aboutMeBlock}/>\r\n                        <AboutItem title={\"Looking for a job\"} data={profile.lookingForAJob ? \"true\" : \"false\"}\r\n                                   classname={styles.lookingJobBlock}/>\r\n                        <AboutItem title={\"Job description\"} data={profile.lookingForAJobDescription}\r\n                                   classname={styles.jobDescBlock}/>\r\n                    </div>\r\n\r\n                    <h2>Websites and Social Links</h2>\r\n                    <div className={styles.linksInfoBlock}>\r\n                        <AboutItem title={\"Facebook\"} data={profile.contacts.facebook}\r\n                                   classname={styles.facebookBlock}/>\r\n                        <AboutItem title={\"Github\"} data={profile.contacts.github} classname={styles.githubBlock}/>\r\n                        <AboutItem title={\"Instagram\"} data={profile.contacts.instagram}\r\n                                   classname={styles.instagramBlock}/>\r\n                        <AboutItem title={\"MainLink\"} data={profile.contacts.mainLink}\r\n                                   classname={styles.mainLinkBlock}/>\r\n                        <AboutItem title={\"Twitter\"} data={profile.contacts.twitter} classname={styles.twitterBlock}/>\r\n                        <AboutItem title={\"VK\"} data={profile.contacts.vk} classname={styles.vkBlock}/>\r\n                        <AboutItem title={\"Website\"} data={profile.contacts.website} classname={styles.websiteBlock}/>\r\n                        <AboutItem title={\"Youtube\"} data={profile.contacts.youtube} classname={styles.youtubeBlock}/>\r\n                    </div>\r\n                </div>\r\n                : <Preloader/>\r\n            }\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport styles from \"./MyFriends.module.scss\";\r\n\r\nexport const MyFriends = React.memo(() => {\r\n    return (\r\n        <div className={styles.aboutMyFriendContainer}>\r\n            My friends\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport styles from \"./Profile.module.scss\"\r\nimport {ProfileInfo} from \"./profile-info/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./my-posts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux-state/profile-reducer\";\r\nimport {ProfileNavigation} from \"./profile-navigation/ProfileNavigation\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {PATH} from \"../navbar/SidebarData\";\r\nimport {About} from \"./profile-info/about-me/AboutMe\";\r\nimport {MyFriends} from \"./profile-info/my-friends/MyFriends\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    error: string\r\n    changeUserStatus: (status: string) => void\r\n    changeUserPhoto: (photos: File) => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo(({profile, error, status, changeUserStatus, changeUserPhoto, isOwner}) => {\r\n    return (\r\n        <div className={styles.profileWrapper}>\r\n            <ProfileInfo\r\n                isOwner={isOwner}\r\n                profile={profile}\r\n                error={error}\r\n                status={status}\r\n                changeUserPhoto={changeUserPhoto}\r\n                changeUserStatus={changeUserStatus}/>\r\n            <ProfileNavigation/>\r\n           <div className={styles.profileNavPanel}>\r\n                <Route path={`${PATH.PROFILE}${PATH.ABOUT}`} render={() => <About profile={profile}/>}/>\r\n                <Route path={`${PATH.PROFILE}${PATH.FRIENDS}`} render={() => <MyFriends/>}/>\r\n                <Route path={`${PATH.PROFILE}${PATH.POSTS}`} render={() => <MyPostsContainer/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n});","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {StoreType} from \"../../redux-state/redux-store\";\r\nimport {\r\n    changeUserPhoto,\r\n    changeUserStatus,\r\n    ProfileType,\r\n    requestUserProfile,\r\n    requestUserStatus\r\n} from \"../../redux-state/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\"\r\nimport {compose} from \"redux\";\r\nimport {Profile} from \"./Profile\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    id: number | null\r\n    isAuth: boolean\r\n    error: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    requestUserProfile: (userId: number) => void\r\n    requestUserStatus: (userId: number) => void\r\n    changeUserStatus: (status: string) => void\r\n    changeUserPhoto: (photos: File) => void\r\n}\r\n\r\ntype ProfileContainerPropsType = MapStatePropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\n\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.id\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        if (typeof userId === \"number\") {\r\n            this.props.requestUserProfile(userId)\r\n        }\r\n        if (typeof userId === \"number\") {\r\n            this.props.requestUserStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile profile={this.props.profile}\r\n                     isOwner={\r\n                         !this.props.match.params.userId\r\n                         // || this.props.match.params.userId === \"posts\"\r\n                         // || this.props.match.params.userId === \"about\"\r\n                         // || this.props.match.params.userId === \"friends\"\r\n                     }\r\n                     status={this.props.status}\r\n                     error={this.props.error}\r\n                     changeUserPhoto={this.props.changeUserPhoto}\r\n                     changeUserStatus={this.props.changeUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreType): MapStatePropsType => {\r\n    const {profile, status} = state.profilePage;\r\n    const {id, error, isAuth} = state.auth;\r\n    return {profile, status, id, isAuth, error};\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {requestUserProfile, requestUserStatus, changeUserStatus, changeUserPhoto}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)"],"sourceRoot":""}